**linux版本：64位CentOS 6.4**
**Nginx版本：nginx1.8.0+**
**php版本： php7.05 &php5.6.20**
安装第二个版本的PHP
```
# wget #PHP下载地址
# tar zxvf #php下载文件.tar.gz
# cd #php所在目录下
#./configure --prefix=/usr/local/#文件夹名 \
--with-curl \
--with-freetype-dir \
--with-gd \
--with-gettext \
--with-iconv-dir \
--with-kerberos \
--with-libdir=lib64 \
--with-libxml-dir \
--with-MySQL \
--with-mysqli \
--with-openssl \
--with-pcre-regex \
--with-pdo-MySQL \
--with-pdo-sqlite \
--with-pear \
--with-png-dir \
--with-xmlrpc \
--with-xsl \
--with-zlib \
--enable-fpm \
--enable-bcmath \
--enable-libxml \
--enable-inline-optimization \
--enable-gd-native-ttf \
--enable-mbregex \
--enable-mbstring \
--enable-pcntl \
--enable-shmop \
--enable-soap \
--enable-sockets \
--enable-sysvsem \
--enable-xml \
--enable-zip
# make &&  make install
```

修改php-fpm.conf的侦听端口为9001，因为主版本7.05是侦听9000。
#php-fpm.conf下的内容
```
[php] view plain copy
; Note: This value is mandatory.  
listen = 127.0.0.1:9001 #
```
**启动php-fpm**
`

`#  /etc/init.d/php-fpm5.6`

`

# **配置Nginx**
# **增加一段新的端口8054的配置并指向到9001以及指定目录即可：**
nginx的配置文件nginx.conf在
# cd /usr/local/nginx/conf  下

```
server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


**# 下方是完整的nginx.conf的代码**
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            try_files $uri $uri/ /index.php?$query_string;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $DOCUMENT_ROOT$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
```


**重启nginx**
`# /usr/local/nginx/sbin/nginx -s reload`

**注意需要防火墙增加新端口的开启，不然无法访问：**
**防火墙配置**
注意如果你希望在本地机器例如xp访问虚拟机的网页，如果是centos6需要修改防火墙启动80端口 `# cd /etc/sysconfig` 修改iptables文件，或者直接用vim编辑 `# vim /etc/sysconfig/iptables `
添加下面一行，打开防火墙80端口:
` -A INPUT -m state --state NEW -m tcp -p tcp --dport 8054 -j ACCEPT `
重启防火墙
` # /etc/init.d/iptables restart`

测试是否成功，查看phpinfo() //我是把根目录设置在nginx/html下的，vim a.php，调用phpinfo(),再用http://192.168.2.187/a.php 
**linux版本：64位CentOS 6.4**
**Nginx版本：nginx1.8.0+**
**php版本： php7.05 &php5.6.20**
安装第二个版本的PHP
```
# wget #PHP下载地址
# tar zxvf #php下载文件.tar.gz
# cd #php所在目录下
#./configure --prefix=/usr/local/#文件夹名 \
--with-curl \
--with-freetype-dir \
--with-gd \
--with-gettext \
--with-iconv-dir \
--with-kerberos \
--with-libdir=lib64 \
--with-libxml-dir \
--with-MySQL \
--with-mysqli \
--with-openssl \
--with-pcre-regex \
--with-pdo-MySQL \
--with-pdo-sqlite \
--with-pear \
--with-png-dir \
--with-xmlrpc \
--with-xsl \
--with-zlib \
--enable-fpm \
--enable-bcmath \
--enable-libxml \
--enable-inline-optimization \
--enable-gd-native-ttf \
--enable-mbregex \
--enable-mbstring \
--enable-pcntl \
--enable-shmop \
--enable-soap \
--enable-sockets \
--enable-sysvsem \
--enable-xml \
--enable-zip
# make &&  make install
```

修改php-fpm.conf的侦听端口为9001，因为主版本7.05是侦听9000。
#php-fpm.conf下的内容
```
[php] view plain copy
; Note: This value is mandatory.  
listen = 127.0.0.1:9001 #
```
**启动php-fpm**
`

`#  /etc/init.d/php-fpm5.6`

`

# **配置Nginx**
# **增加一段新的端口8054的配置并指向到9001以及指定目录即可：**
nginx的配置文件nginx.conf在
# cd /usr/local/nginx/conf  下

```
server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


**# 下方是完整的nginx.conf的代码**
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            try_files $uri $uri/ /index.php?$query_string;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $DOCUMENT_ROOT$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
    server {
        listen       8054;
        server_name  localhost;

        location / {
                root    html;
                #root /usr/local/php5;
                try_files $uri $uri/ /index.php?$query_string;
                index   index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   html;
        }

        location ~ \.php$ {
                root             html;
                fastcgi_pass    127.0.0.1:9001;
                fastcgi_index   index.php;
                include         fastcgi_params;
                fastcgi_param   SCRIPT_FILENAME $DOCUMENT_ROOT$fastcgi_script_name;
                                        #/usr/local/php5$fastcgi_script_name;  
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
```


**重启nginx**
`# /usr/local/nginx/sbin/nginx -s reload`

**注意需要防火墙增加新端口的开启，不然无法访问：**
**防火墙配置**
注意如果你希望在本地机器例如xp访问虚拟机的网页，如果是centos6需要修改防火墙启动80端口 `# cd /etc/sysconfig` 修改iptables文件，或者直接用vim编辑 `# vim /etc/sysconfig/iptables `
添加下面一行，打开防火墙80端口:
` -A INPUT -m state --state NEW -m tcp -p tcp --dport 8054 -j ACCEPT `
重启防火墙
` # /etc/init.d/iptables restart`

测试是否成功，查看phpinfo() //我是把根目录设置在nginx/html下的，vim a.php，调用phpinfo(),再用http://192.168.2.187/a.php and http://192.168.2.187:8054/a.php来访问 //(ip请选择自己的，第二个端口我是设置成8054)
